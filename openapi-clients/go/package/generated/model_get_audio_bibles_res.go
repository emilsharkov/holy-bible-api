/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetAudioBiblesRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAudioBiblesRes{}

// GetAudioBiblesRes struct for GetAudioBiblesRes
type GetAudioBiblesRes struct {
	AudioBibles []AudioBible `json:"audio_bibles"`
}

type _GetAudioBiblesRes GetAudioBiblesRes

// NewGetAudioBiblesRes instantiates a new GetAudioBiblesRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAudioBiblesRes(audioBibles []AudioBible) *GetAudioBiblesRes {
	this := GetAudioBiblesRes{}
	this.AudioBibles = audioBibles
	return &this
}

// NewGetAudioBiblesResWithDefaults instantiates a new GetAudioBiblesRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAudioBiblesResWithDefaults() *GetAudioBiblesRes {
	this := GetAudioBiblesRes{}
	return &this
}

// GetAudioBibles returns the AudioBibles field value
func (o *GetAudioBiblesRes) GetAudioBibles() []AudioBible {
	if o == nil {
		var ret []AudioBible
		return ret
	}

	return o.AudioBibles
}

// GetAudioBiblesOk returns a tuple with the AudioBibles field value
// and a boolean to check if the value has been set.
func (o *GetAudioBiblesRes) GetAudioBiblesOk() ([]AudioBible, bool) {
	if o == nil {
		return nil, false
	}
	return o.AudioBibles, true
}

// SetAudioBibles sets field value
func (o *GetAudioBiblesRes) SetAudioBibles(v []AudioBible) {
	o.AudioBibles = v
}

func (o GetAudioBiblesRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAudioBiblesRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["audio_bibles"] = o.AudioBibles
	return toSerialize, nil
}

func (o *GetAudioBiblesRes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"audio_bibles",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetAudioBiblesRes := _GetAudioBiblesRes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetAudioBiblesRes)

	if err != nil {
		return err
	}

	*o = GetAudioBiblesRes(varGetAudioBiblesRes)

	return err
}

type NullableGetAudioBiblesRes struct {
	value *GetAudioBiblesRes
	isSet bool
}

func (v NullableGetAudioBiblesRes) Get() *GetAudioBiblesRes {
	return v.value
}

func (v *NullableGetAudioBiblesRes) Set(val *GetAudioBiblesRes) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAudioBiblesRes) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAudioBiblesRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAudioBiblesRes(val *GetAudioBiblesRes) *NullableGetAudioBiblesRes {
	return &NullableGetAudioBiblesRes{value: val, isSet: true}
}

func (v NullableGetAudioBiblesRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAudioBiblesRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


