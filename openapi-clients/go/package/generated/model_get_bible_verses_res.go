/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetBibleVersesRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBibleVersesRes{}

// GetBibleVersesRes struct for GetBibleVersesRes
type GetBibleVersesRes struct {
	Verses []BibleVerse `json:"verses"`
}

type _GetBibleVersesRes GetBibleVersesRes

// NewGetBibleVersesRes instantiates a new GetBibleVersesRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBibleVersesRes(verses []BibleVerse) *GetBibleVersesRes {
	this := GetBibleVersesRes{}
	this.Verses = verses
	return &this
}

// NewGetBibleVersesResWithDefaults instantiates a new GetBibleVersesRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBibleVersesResWithDefaults() *GetBibleVersesRes {
	this := GetBibleVersesRes{}
	return &this
}

// GetVerses returns the Verses field value
func (o *GetBibleVersesRes) GetVerses() []BibleVerse {
	if o == nil {
		var ret []BibleVerse
		return ret
	}

	return o.Verses
}

// GetVersesOk returns a tuple with the Verses field value
// and a boolean to check if the value has been set.
func (o *GetBibleVersesRes) GetVersesOk() ([]BibleVerse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Verses, true
}

// SetVerses sets field value
func (o *GetBibleVersesRes) SetVerses(v []BibleVerse) {
	o.Verses = v
}

func (o GetBibleVersesRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBibleVersesRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["verses"] = o.Verses
	return toSerialize, nil
}

func (o *GetBibleVersesRes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"verses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetBibleVersesRes := _GetBibleVersesRes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetBibleVersesRes)

	if err != nil {
		return err
	}

	*o = GetBibleVersesRes(varGetBibleVersesRes)

	return err
}

type NullableGetBibleVersesRes struct {
	value *GetBibleVersesRes
	isSet bool
}

func (v NullableGetBibleVersesRes) Get() *GetBibleVersesRes {
	return v.value
}

func (v *NullableGetBibleVersesRes) Set(val *GetBibleVersesRes) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBibleVersesRes) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBibleVersesRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBibleVersesRes(val *GetBibleVersesRes) *NullableGetBibleVersesRes {
	return &NullableGetBibleVersesRes{value: val, isSet: true}
}

func (v NullableGetBibleVersesRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBibleVersesRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


