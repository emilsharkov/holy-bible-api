/* tslint:disable */
/* eslint-disable */
/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface BibleVerse
 */
export interface BibleVerse {
    /**
     * 
     * @type {number}
     * @memberof BibleVerse
     */
    bibleId: number;
    /**
     * 
     * @type {number}
     * @memberof BibleVerse
     */
    book: number;
    /**
     * 
     * @type {number}
     * @memberof BibleVerse
     */
    chapter: number;
    /**
     * 
     * @type {string}
     * @memberof BibleVerse
     */
    text: string;
    /**
     * 
     * @type {number}
     * @memberof BibleVerse
     */
    verse: number;
}

/**
 * Check if a given object implements the BibleVerse interface.
 */
export function instanceOfBibleVerse(value: object): value is BibleVerse {
    if (!('bibleId' in value) || value['bibleId'] === undefined) return false;
    if (!('book' in value) || value['book'] === undefined) return false;
    if (!('chapter' in value) || value['chapter'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('verse' in value) || value['verse'] === undefined) return false;
    return true;
}

export function BibleVerseFromJSON(json: any): BibleVerse {
    return BibleVerseFromJSONTyped(json, false);
}

export function BibleVerseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BibleVerse {
    if (json == null) {
        return json;
    }
    return {
        
        'bibleId': json['bible_id'],
        'book': json['book'],
        'chapter': json['chapter'],
        'text': json['text'],
        'verse': json['verse'],
    };
}

export function BibleVerseToJSON(json: any): BibleVerse {
    return BibleVerseToJSONTyped(json, false);
}

export function BibleVerseToJSONTyped(value?: BibleVerse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bible_id': value['bibleId'],
        'book': value['book'],
        'chapter': value['chapter'],
        'text': value['text'],
        'verse': value['verse'],
    };
}

